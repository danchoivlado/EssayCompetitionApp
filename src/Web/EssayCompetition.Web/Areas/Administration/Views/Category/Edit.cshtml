@using EssayCompetition.Web.ViewModels.Administration.Category;
@model EditViewModel
@{
    ViewData["Title"] = "Edit";
}
<h1>Edit</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" enctype="multipart/form-data" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea  rows="5" max-rows="20" asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageUrl" class="control-label"></label>
                <a href="@Model.ImageUrl" target="_blank">Preview current image</a>
                <input asp-for="ImageUrl" id="userIamgeUrl" class="form-control" />
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="inputGroupFileAddon01">Upload</span>
                </div>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" asp-for="@Model.Content" id="inputGroupFile01"
                           aria-describedby="inputGroupFileAddon01">
                    <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section scripts{
    <script src="https://code.jquery.com/jquery-2.2.2.min.js"></script>
    <script src="textarea-max-rows.js"></script>
    <style>
        textarea {
            width: 100%;
        }
    </style>

    <script>
        $('#inputGroupFile01').change(function () {
            $('#userIamgeUrl').val($(this).val());
        });
    </script>

    <script>
        $(function () {
            $('textarea[max-rows]').each(function () {
                var textarea = $(this);

                var minRows = Number(textarea.attr('rows'));
                var maxRows = Number(textarea.attr('max-rows'));

                // clone the textarea and hide it offscreen
                // TODO: copy all the styles
                var textareaClone = $('<textarea/>', {
                    rows: minRows,
                    maxRows: maxRows,
                    class: textarea.attr('class')
                }).css({
                    position: 'absolute',
                    left: -$(document).width() * 2
                }).insertAfter(textarea);

                var textareaCloneNode = textareaClone.get(0);

                textarea.on('input', function () {
                    // copy the input from the real textarea
                    textareaClone.val(textarea.val());

                    // set as small as possible to get the real scroll height
                    textareaClone.attr('rows', 1);

                    // save the real scroll height
                    var scrollHeight = textareaCloneNode.scrollHeight;

                    // increase the number of rows until the content fits
                    for (var rows = minRows; rows < maxRows; rows++) {
                        textareaClone.attr('rows', rows);

                        if (textareaClone.height() > scrollHeight) {
                            break;
                        }
                    }

                    // copy the rows value back to the real textarea
                    textarea.attr('rows', textareaClone.attr('rows'));
                }).trigger('input');
            });
        });
    </script>
}